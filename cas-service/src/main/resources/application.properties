##
# Embedded Container
#
# CAS Server Context Configuration
#
server.context-path=/cas
server.port=8080

server.ssl.enabled=false
#server.ssl.key-store=classpath:/secure/keystore
#server.ssl.key-store-password=sso123456
#server.ssl.key-password=sso123456

server.max-http-header-size=2097152
server.use-forward-headers=true
server.connection-timeout=20000
server.error.include-stacktrace=ALWAYS

server.compression.enabled=true
server.compression.mime-types=application/javascript,application/json,application/xml,text/html,text/xml,text/plain

##
# Embedded Apache Tomcat Container
#
server.tomcat.max-http-post-size=2097152
server.tomcat.basedir=build/tomcat
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
server.tomcat.accesslog.suffix=.log
server.tomcat.min-spare-threads=10
server.tomcat.max-threads=200
server.tomcat.port-header=X-Forwarded-Port
server.tomcat.protocol-header=X-Forwarded-Proto
server.tomcat.protocol-header-https-value=https
server.tomcat.remote-ip-header=X-FORWARDED-FOR
server.tomcat.uri-encoding=UTF-8

##
# Http Web Requests
#
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

##
# CAS Cloud Bus Configuration
#
spring.cloud.bus.enabled=false

# Eureka Service Discovery
# Indicates that systemPropertiesOverride can be used.
# Set to false to prevent users from changing the default accidentally. Default true.
spring.cloud.config.allow-override=true

# External properties should override system properties.
spring.cloud.config.override-system-properties=false

# When allowOverride is true, external properties should take lowest priority, and not override any
# existing property sources (including local config files).
spring.cloud.config.override-none=false

##
# Spring Boot Endpoints
#
endpoints.enabled=false
endpoints.sensitive=true

endpoints.restart.enabled=false
endpoints.shutdown.enabled=false

# Control the security of the management/actuator endpoints
# The 'enabled' flag below here controls the rendering of details for the health endpoint amongst other things.
management.security.enabled=true
management.security.roles=ACTUATOR,ADMIN
management.security.sessions=if_required
management.context-path=/status
management.add-application-context-header=false

# Define a CAS-specific "WARN" status code and its order
management.health.status.order=WARN, DOWN, OUT_OF_SERVICE, UNKNOWN, UP

##
# Basic Authentication
#
# Control the security of the management/actuator endpoints
# With basic authentication, assuming Spring Security and/or relevant modules are on the classpath.
security.basic.authorize-mode=role
security.basic.path=/cas/status/**
# security.basic.enabled=true
# security.user.name=casuser
# security.user.password=

##
# CAS Web Application Session Configuration
#
server.session.timeout=300
server.session.cookie.http-only=true
server.session.tracking-modes=COOKIE

##
# CAS Thymeleaf View Configuration
#
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=true
spring.thymeleaf.mode=HTML
spring.thymeleaf.template-resolver-order=100

##
# CAS Log4j Configuration
#
# logging.config=file:/etc/cas/log4j2.xml
logging.config=classpath:/log4j2.xml
server.context-parameters.isLog4jAutoInitializationDisabled=true

##
# CAS AspectJ Configuration
#
spring.aop.auto=true
spring.aop.proxy-target-class=true

######################################## mysql start ########################################
##
# Authentication Attributes
#
cas.authn.attributeRepository.jdbc[0].user=learn
cas.authn.attributeRepository.jdbc[0].password=learn-m
cas.authn.attributeRepository.jdbc[0].driverClass=com.mysql.cj.jdbc.Driver
cas.authn.attributeRepository.jdbc[0].url=jdbc:mysql://101.132.110.185:3306/oauth?verifyServerCertificate=false&useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true
cas.authn.attributeRepository.jdbc[0].sql=SELECT account_name as username, password, is_delete as enabled, email, true_name, phone FROM usr_account WHERE account_name=? and is_delete=0

cas.authn.jdbc.query[0].user=learn
cas.authn.jdbc.query[0].password=learn-m
cas.authn.jdbc.query[0].driverClass=com.mysql.cj.jdbc.Driver
cas.authn.jdbc.query[0].url=jdbc:mysql://101.132.110.185:3306/oauth?verifyServerCertificate=false&useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true

cas.authn.jdbc.query[0].name=username
cas.authn.jdbc.query[0].order=0
cas.authn.jdbc.query[0].sql=SELECT account_name as username, password, is_delete as enabled, email, true_name, phone FROM usr_account WHERE account_name=? and is_delete=0
cas.authn.jdbc.query[0].fieldPassword=password

cas.authn.jdbc.query[0].principalAttributeList=enabled,email,phone
######################################## mysql end ########################################

##
# Warning Cookie
#
cas.warningCookie.secure=false

##
# Ticket Granting Cookie
#
cas.tgc.secure=false

##
# Service Tickets Behavior
#
cas.ticket.st.timeToKillInSeconds=300

cas.serviceRegistry.initFromJson=true
cas.serviceRegistry.json.location=classpath:/services

##
# 登出后允许跳转到指定页面
#
cas.logout.followServiceRedirects=true
# cas.logout.redirectParameter=service
# cas.logout.redirectUrl=https://www.github.com
# cas.logout.confirmLogout=false
# cas.logout.removeDescendantTickets=false

##
# Enable the backing map to be cacheable
#
cas.ticket.registry.inMemory.cache=true
